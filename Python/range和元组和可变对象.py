# range()函数，可以生成一个自然数的序列
# r = range(3)  # 生成一个这样的序列：[0, 1, 2]
# print(list(r))
# range()函数需要三个参数
# 1.起始位置（可以省略，默认是0）
# 2.结束位置
# 3.步长（可以省略，默认是1）
# n = range(3, 12, 2)
# print(list(n))
# for i in range(10):  # range()可以和for循环配合使用，python中不能直接在for循环的in后面加10，20这样的数，也因为python中的for循环只有for in这一种写法，所以需要和range()配合
#    print(i)


# 元组
# 元组是一个不可变序列，他的操作的方式基本上和列表是一致的，所以你在操作元组时，可以把它当作一个不可变列表
# 一般当我们希望数据不可变时，可以用元组
# 创建元组：
# yaunzu = ()  # 创建了一个空元组
# print(yaunzu, type(yaunzu))
# 创建元组时，（）可以省略
# yz = 10, 20, 30
# print(yz, type(yaunzu))
# 但是不能这样写，因为他无法判断是否时单一元素,在给元组只传输一个参数时，需要在元素后面加个逗号
# a = 10
# a = 10,

#   元组是不可变对象，所以无法通过索引改变它的值
# num = 10, 20, 30, 40, 50
# num[2] = 55 # 报错了

# 元组的解构赋值
# y = 1, 2, 3
# a, b, c = y
# print(f'''
# {a}
# {b}
# {c}
# ''')
# *变量,可以获取多个元组的元素
# y = 1, 2, 3, 4, 5, 6, 7, 89, 9
# a, b, *c = y
# print(f'''
# {a}
# {b}
# {c}
# ''')
# *变量，可以写在任意一个位置
# a, *b, c = y
# print(f'''
# {a}
# {b}
# {c}
# ''')

# *a, b, c = y
# print(f'''
# {a}
# {b}
# {c}
# ''')

# 可变对象
# 每个对象中都存了三个数据：
# 1.id（标识），或者说内存地址
# 2.type（）类型
# 3.value（值）

# 列表即就是一个可变对象
a = [1, 2, 3, 4]
print('改变前 = ', 'a = ', a, id(a))
a[0] = 10  # 改对象的值,这个操作是在通过变量去修改对象的值，此操作不会修改变量所指向的对象，当我们在修改对象的值时，如果有其他变量也指向了这个对象，那么改变后的值也会体现在其他变量上
print('改变后 = ', 'a = ', a, id(a))

# 改变量(改变量的id，或者叫内存地址)，此操作会给变量重新赋值，它会改变变量所指向的对象，但是我们在给一个变量重新赋值时，不会对其他变量产生影响
a = [0, 0, 0, 0, 0]
print('改变后 = ', 'a = ', a, id(a))

# 一般只有在给变量重新赋值时才是修改变量，其余都是改对象

# 注意！！！因为每一次执行代码时，系统就会重新给代码分配内存，所以每次执行后显示的id都不一样！！！


# == 和 is 的区别
# == 是比较对象的值
# is 是比较对象的id（内存地址）

b = [123]
c = [123]
print('b的id = ', id(b), 'c的id = ', id(c))
print(b == c, " ", b is c)
